{"version":3,"sources":["helpers/storage.ts"],"names":[],"mappings":";;;;;;AAAA,wBAAyB,YAAY,CAAC,CAAA;AAEtC,WAAY,WAAW;IACnB,6DAAY,CAAA;IACZ,iEAAc,CAAA;AAClB,CAAC,EAHW,mBAAW,KAAX,mBAAW,QAGtB;AAHD,IAAY,WAAW,GAAX,mBAGX,CAAA;AAED;IAAgC,2BAAa;IAGzC,iBAAoB,UAAkB,EAAE,IAAkB;QACtD,iBAAO,CAAC;QADQ,eAAU,GAAV,UAAU,CAAQ;QAF9B,aAAQ,GAAG,IAAI,CAAC;QAIpB,IAAI,GAAG,IAAI,IAAI,WAAW,CAAC,YAAY,CAAC;QACxC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IAED,+BAAa,GAAb,UAAc,IAAiB;QAC3B,IAAI,CAAC,QAAQ,GAAG,IAAI,KAAK,WAAW,CAAC,YAAY,GAAG,YAAY,GAAG,cAAc,CAAC;QAClF,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YACjD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC;QACxC,CAAC;QAED,IAAI,CAAC,KAAK,EAAE,CAAC;IACjB,CAAC;IAED,qBAAG,GAAH,UAAI,IAAY,EAAE,KAAQ;QACtB,gBAAK,CAAC,GAAG,YAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QACvB,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;IAED,wBAAM,GAAN,UAAO,IAAY;QACf,IAAI,KAAK,GAAG,gBAAK,CAAC,MAAM,YAAC,IAAI,CAAC,CAAC;QAC/B,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;IAED,uBAAK,GAAL;QACI,gBAAK,CAAC,KAAK,WAAE,CAAC;QACd,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC;IACxC,CAAC;IAEM,aAAK,GAAZ;QACI,MAAM,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;QAC5B,MAAM,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;IAClC,CAAC;IAEO,uBAAK,GAAb;QACI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAChE,CAAC;IAEO,uBAAK,GAAb;QACI,gBAAK,CAAC,KAAK,WAAE,CAAC;QACd,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC;YAAC,MAAM,CAAC;QACnD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;IAC5D,CAAC;IACL,cAAC;AAAD,CAjDA,AAiDC,CAjD+B,oBAAU,GAiDzC;AAjDY,eAAO,UAiDnB,CAAA","file":"src/helpers/storage.js","sourcesContent":["import {Dictionary} from '../helpers';\n\nexport enum StorageType {\n    LocalStorage,\n    SessionStorage\n}\n\nexport class Storage<T> extends Dictionary<T>{\n    private _storage = null;\n\n    constructor(private _container: string, type?: StorageType) {\n        super();\n        type = type || StorageType.LocalStorage;\n        this.switchStorage(type);\n    }\n\n    switchStorage(type: StorageType) {\n        this._storage = type === StorageType.LocalStorage ? localStorage : sessionStorage;\n        if (!this._storage.hasOwnProperty(this._container)) {\n            this._storage[this._container] = \"\";\n        }\n\n        this._load();\n    }\n\n    add(item: string, value: T): T {\n        super.add(item, value);\n        this._save();\n        return value;\n    }\n\n    remove(item: string) {\n        var value = super.remove(item);\n        this._save();\n        return value;\n    }\n\n    clear() {\n        super.clear();\n        this._storage[this._container] = \"\";\n    }\n\n    static clear() {\n        window.localStorage.clear();\n        window.sessionStorage.clear();\n    }\n\n    private _save() {\n        this._storage[this._container] = JSON.stringify(this.items);\n    }\n\n    private _load() {\n        super.clear();\n        if (this._storage[this._container] == null) return;\n        this.items = JSON.parse(this._storage[this._container]);\n    }\n}\n"],"sourceRoot":"/source/"}